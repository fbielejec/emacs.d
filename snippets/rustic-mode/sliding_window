# -*- mode: snippet -*-
# name: sliding_window
# key: <sliding_window
# --

fn $0sliding_window(a: Vec<i32>, k: i32) -> i32 {
    let mut left = 0;
    let mut current = 0;
    let mut answer = 0;

    for right in 0..a.len() {
        // add element at a[right] to the window
        current += a[right];

        // while window is invalid
        while current > k {
            // remove element at a[left] from window
            current -= a[left];
            // advance the pointer (left++)
            left += 1;
        }        

        // also equal to the number of valid windows ending at index right
        let window_size = right - left + 1;

        // update the answer, e.g.
        answer = std::cmp::max(answer, window_size as i32)
    }

    answer
}